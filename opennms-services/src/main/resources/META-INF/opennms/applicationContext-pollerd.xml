<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
  xmlns:onmsgi="http://xmlns.opennms.org/xsd/spring/onms-osgi"
  xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
  http://xmlns.opennms.org/xsd/spring/onms-osgi http://xmlns.opennms.org/xsd/spring/onms-osgi.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
">

    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:annotation-config />
    
    <context:property-placeholder properties-ref="pollerProperties"/>

	<bean id="pollerProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	<property name="properties">
		<props>
			<prop key="restartSleepTime">100000</prop>
			<prop key="initialSleepTime">100000</prop>
		</props>
	</property>
	</bean>

    <bean name="pollerQueryManager" class="org.opennms.netmgt.poller.QueryManagerDaoImpl"/>

    <bean name="pollContext" class="org.opennms.netmgt.poller.DefaultPollContext">
      <property name="eventManager" ref="eventIpcManager" />
      <property name="localHostName" ref="localHostName" />
      <property name="name" value="OpenNMS.Poller.DefaultPollContext" />
      <property name="pollerConfig" ref="pollerConfig" />
      <property name="queryManager" ref="pollerQueryManager" />
    </bean> 
    
    <bean name="pollableNetwork" class="org.opennms.netmgt.poller.pollables.PollableNetwork">
        <constructor-arg ref="pollContext" />
    </bean>
    
    <bean name="daemon" class="org.opennms.netmgt.poller.Poller">
      <property name="network" ref="pollableNetwork" />
      <property name="pollerConfig" ref="pollerConfig" />
      <property name="pollOutagesConfig" ref="pollOutagesConfig" />
      <property name="eventIpcManager" ref="eventIpcManager"/>
    </bean>
    
	<bean id="availabilityMonitor" class="org.opennms.netmgt.poller.monitors.AvailabilityMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="availabilityMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="citrixMonitor" class="org.opennms.netmgt.poller.monitors.CitrixMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="citrixMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="dnsMonitor" class="org.opennms.netmgt.poller.monitors.DnsMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="dnsMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="dnsResolutionMonitor" class="org.opennms.netmgt.poller.monitors.DNSResolutionMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="dnsResolutionMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="dominoIIOPMonitor" class="org.opennms.netmgt.poller.monitors.DominoIIOPMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="dominoIIOPMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="ftpMonitor" class="org.opennms.netmgt.poller.monitors.FtpMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="ftpMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="gpMonitor" class="org.opennms.netmgt.poller.monitors.GpMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="gpMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="httpMonitor" class="org.opennms.netmgt.poller.monitors.HttpMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="httpMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="httpPostMonitor" class="org.opennms.netmgt.poller.monitors.HttpPostMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="httpPostMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="httpsMonitor" class="org.opennms.netmgt.poller.monitors.HttpsMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="httpsMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="icmpMonitor" class="org.opennms.netmgt.poller.monitors.IcmpMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="icmpMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="imapMonitor" class="org.opennms.netmgt.poller.monitors.ImapMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="imapMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="jdbcMonitor" class="org.opennms.netmgt.poller.monitors.JDBCMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="jdbcMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="jdbcQueryMonitor" class="org.opennms.netmgt.poller.monitors.JDBCQueryMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="jdbcQueryMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="jdbcStoredProcedureMonitor" class="org.opennms.netmgt.poller.monitors.JDBCStoredProcedureMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="jdbcStoredProcedureMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="jolokiaBeanMonitor" class="org.opennms.netmgt.poller.monitors.JolokiaBeanMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="jolokiaBeanMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="jschSshMonitor" class="org.opennms.netmgt.poller.monitors.JschSshMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="jschSshMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="ldapMonitor" class="org.opennms.netmgt.poller.monitors.LdapMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="ldapMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="ldapsMonitor" class="org.opennms.netmgt.poller.monitors.LdapsMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="ldapsMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="loopMonitor" class="org.opennms.netmgt.poller.monitors.LoopMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="loopMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="memcachedMonitor" class="org.opennms.netmgt.poller.monitors.MemcachedMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="memcachedMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="nrpeMonitor" class="org.opennms.netmgt.poller.monitors.NrpeMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="nrpeMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="ntpMonitor" class="org.opennms.netmgt.poller.monitors.NtpMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="ntpMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="pop3Monitor" class="org.opennms.netmgt.poller.monitors.Pop3Monitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="pop3Monitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="smtpMonitor" class="org.opennms.netmgt.poller.monitors.SmtpMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="smtpMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="sshMonitor" class="org.opennms.netmgt.poller.monitors.SshMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="sshMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="sslCertMonitor" class="org.opennms.netmgt.poller.monitors.SSLCertMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="sslCertMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="strafePingMonitor" class="org.opennms.netmgt.poller.monitors.StrafePingMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="strafePingMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="systemExecuteMonitor" class="org.opennms.netmgt.poller.monitors.SystemExecuteMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="systemExecuteMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="tcpMonitor" class="org.opennms.netmgt.poller.monitors.TcpMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="tcpMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="trivialTimeMonitor" class="org.opennms.netmgt.poller.monitors.TrivialTimeMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="trivialTimeMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<bean id="webMonitor" class="org.opennms.netmgt.poller.monitors.WebMonitor" />
	<onmsgi:service interface="org.opennms.netmgt.poller.ServiceMonitor"
		ref="webMonitor">
		<onmsgi:service-properties>
			<entry key="implementation"
				value="org.opennms.netmgt.poller.ServiceMonitorCamelImpl" />
		</onmsgi:service-properties>
	</onmsgi:service>
	
	<!-- Active MQ -->
    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="brokerURL" value="tcp://localhost:61616" />
    </bean>
    
    <bean id="poller" class="org.opennms.netmgt.poller.remote.Poller"/>
    
    <camelContext id="pollerCamelContext" xmlns="http://camel.apache.org/schema/spring">
    
        <!-- Bootstrap timer -->
    <route id="startAvailabilityMonitorPollerTimer">
      <from uri="timer:availabilityMonitorPollerTimer?period=${restartSleepTime}&amp;delay=${initialSleepTime}&amp;fixedRate=true&amp;daemon=true" />
      <to uri="bean:availabilityMonitor?method=poll" />
      <split>
        <simple>${body}</simple>
        <recipientList>
          <simple>activemq:Location-availabilityMonitor</simple>
        </recipientList>
      </split>
    </route>
     
    <!-- Default localhost location queue -->
    <route id="localhostLocationPollerRoute">
      <from uri="activemq:Location-localhost" />
      <log loggingLevel="INFO" message="applicationContext-pollerd.xml: Executing Poller Job" />
      <log loggingLevel="INFO" message="applicationContext-pollerd.xml: ${body}" />
      <bean ref="poller" />
    </route>
    
    </camelContext>
    
</beans>
