<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
  xmlns:onmsgi="http://xmlns.opennms.org/xsd/spring/onms-osgi"
  xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
  http://xmlns.opennms.org/xsd/spring/onms-osgi http://xmlns.opennms.org/xsd/spring/onms-osgi.xsd
">

  <context:annotation-config />
  <tx:annotation-driven/>
  
   <!-- 
    DataSourceFactory has been changed to return TransactionAwareDataSources so
    legacy code can participate in transactions properly.
  -->
  <bean id="dataSource" class="org.opennms.core.db.DataSourceFactoryBean" />

  <onmsgi:service interface="javax.sql.DataSource" ref="dataSource"/>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <bean id="timeKeeper" class="org.opennms.netmgt.collection.support.DefaultTimeKeeper" />

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="packagesToScan">
      <list>
        <!-- TODO: Move into org.opennms.netmgt.model -->
        <value>org.opennms.netmgt.bsm</value>
        <!-- TODO: Move into org.opennms.netmgt.model -->
        <value>org.opennms.netmgt.config.monitoringLocations</value>
        <value>org.opennms.netmgt.dao.hibernate</value>
        <value>org.opennms.netmgt.model</value>
      </list>
    </property>
    <!--  property name="schemaUpdate" value="true">
      </property -->
    <property name="annotatedPackages">
      <list>
        <value>org.opennms.netmgt.dao.hibernate</value>
        <value>org.opennms.netmgt.model</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <value>
        hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
        hibernate.cache.use_second_level_cache=false
        hibernate.cache=false
        hibernate.cache.use_query_cache=false
        hibernate.jdbc.batch_size=0
        <!-- hibernate.format_sql=true -->
      </value>
    </property>
  </bean>
  
    <bean id="sessionFactoryWrapper" class="org.opennms.netmgt.dao.hibernate.DefaultSessionFactoryWrapper">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>
  <onmsgi:service ref="sessionFactoryWrapper" interface="org.opennms.netmgt.dao.api.SessionFactoryWrapper"/>

  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
    <property name="nestedTransactionAllowed" value="true"/>
  </bean>
  
  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager" />
  </bean>
  
  <onmsgi:service interface="org.springframework.transaction.support.TransactionOperations" ref="transactionTemplate" />
  
    <bean id="ipInterfaceDao" class="org.opennms.netmgt.dao.hibernate.IpInterfaceDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <bean id="daemon" class="org.opennms.netmgt.trapd.Trapd">
    <property name="eventReader" ref="eventReader"/>
    <property name="trapReceiver" ref="trapReceiver"/>
    <property name="trapdIpMgr" ref="trapdIpMgr"/>
  </bean>
  
  <bean id="trapNotificationDefaultImpl" class="org.opennms.netmgt.trapd.TrapNotificationHandlerDefaultImpl" >
    <property name="trapdIpManager" ref="trapdIpMgr"/>
    <property name="processorFactory" ref="processorFactory"/>
  </bean>
  
  <bean id="trapReceiver" class="org.opennms.netmgt.trapd.TrapReceiverImpl">
    <constructor-arg ref="trapdConfig" />
    <property name="trapNotificationHandlers" ref="trapNotificationDefaultImpl"/>
  </bean>
  
  <bean id="trapdIpMgr" class="org.opennms.netmgt.trapd.TrapdIpManagerDaoImpl"/>
  
  <bean id="eventReader" class="org.opennms.netmgt.trapd.BroadcastEventProcessor">
    <constructor-arg ref="eventIpcManager" />
    <constructor-arg ref="trapdIpMgr" />
  </bean>
  
  <bean id="processorFactory" class="org.opennms.netmgt.trapd.TrapQueueProcessorFactory">
    <property name="eventForwarder" ref="eventIpcManager"/>
  </bean>
  
  <bean id="newSuspectOnTrap" factory-bean="trapdConfig" factory-method="getNewSuspectOnTrap"/>
  
  <bean id="snmpTrapAddress" factory-bean="trapdConfig" factory-method="getSnmpTrapAddress"/>
  
  <bean id="snmpTrapPort" factory-bean="trapdConfig" factory-method="getSnmpTrapPort"/>

  <bean id="snmpV3Users" factory-bean="trapdConfig" factory-method="getSnmpV3Users"/>
  
</beans>
